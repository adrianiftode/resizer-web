Layout: false


ruby:
  def render_cells(list, &block)
    list.map do |value|
      text = block.call(value)
      "<td>#{text}</td>"
    end.join("\n")
  end 

  def render_numbers(contract, subkey, &block)
    render_cells(contract.lengths) do |l|
      val = l.send(subkey)
      case val
      when nil
        'none'
      when Float::INFINITY
        'unlimited'
      when ::Numeric
        block.nil? ? val : block.call(val)
      else
        'error'
      end
      
    end
  end 

   def render_hours(contract,subkey, span = nil)
    render_numbers(contract,subkey) do |value|
      if value < 1
        (value * 60).floor.to_s + " minutes"
      elsif value == 1
        "1 hour"
      else
        value.to_i.to_s + " hours"
      end #+ span.nil? ? "" : " per #{span.to_s}"
    end
  end 


  col = [contract,contract,contract]

.row
  .span12
    p &nbsp;
.row
  .span8
    /h1
    /  = contract.name

    - if contract.lifetime_license && contract.major_upgrades
      markdown:
       This support contract includes a permanent, [Enterprise-wide Elite license](/licenses/elite). You will be able to continue using the product after your subscription expires. While your support contract is active, you will receive free upgrades to all software included in your license. Major releases published *after* your contract expires are *not* included.
    

    - if contract.response_2
      markdown:
        Maximum response time: **2 business hours**
    - elsif contract.response_24
      markdown:
        Maximum response time: **24 business hours**


    - if contract.hotfix_2
      markdown: 
        Hotfixes provided within 2 business days
    - elsif contract.hotfix_7
      markdown:
        Hotfixes provided within 7 business days


    - if contract.contacts == Float::INFINITY
      markdown:
        All employees within your organization have access to our development team via email, phone, TeamViewer, or StackOverflow. 
    - elsif contract.contacts == 1
      markdown:
        1 designated point-of-contact has access to our development team via email, phone, TeamViewer, or StackOverflow.


    
     

    table.table.table-features.table-condensed
      thead
        th.features-subhead
          = "#{contract.name} Tier"
      tbody
        tr
          td.feature-subhead Duration
          == render_cells(contract.lengths){|prod| prod.support_months.to_s + " months"}
        
        tr
          td.feature-subhead Price
          - contract.lengths.each do |prod|
            td
              == partial(:shopping_cart_link, {locals: {button_text: prod.price_usd_str, product_value: prod.sku}})
         
        tr
          td.feature-subhead Discount
          == render_cells(contract.lengths){|prod| prod.percent_discount == 0 ? "" : "%.f\%" % prod.percent_discount}
        tr
          td.features-subhead Business Hours Incidents
          == render_numbers(contract,:total_support_incidents)
        tr
          td.features-subhead
            | Emergency Incidents
            a href="#note3"
              sup 3
          == render_numbers(contract,:total_emergency_incidents)
        tr
          td.features-subhead &nbsp;
          td colspan="4"
        tr
          th Architecture Planning/Q&A
          == render_hours(contract,:total_architecture_hours)
        tr
          th Custom Development
          == render_hours(contract,:total_dev_hours)
        tr
          th Assisted Installs
          == render_numbers(contract,:total_assisted_installs)


